=========
Booleans
=========

first = true
second = false

---

(source_file
  (assignment
    identifier: (identifier)
    value: (boolean))
  (assignment
    identifier: (identifier)
    value: (boolean)))

========
Numbers
========

first = 1234567890
second = 1.0
third = 0.0000
fourth = 111.0

---

; Decimal points must be surrounded by at least one digit.
(source_file
  (assignment
    identifier: (identifier)
    value: (number))
  (assignment
    identifier: (identifier)
    value: (number))
  (assignment
    identifier: (identifier)
    value: (number))
  (assignment
    identifier: (identifier)
    value: (number)))

========
Strings
========

empty = ""
single = "a"
multiple = "with content"
weird = "with-!@#$%^&*()?/|{}[]`~'<>:;,.symbols"

---

(source_file
  (assignment
    identifier: (identifier)
    value: (string))
  (assignment
    identifier: (identifier)
    value: (string
      (string_fragment)))
  (assignment
    identifier: (identifier)
    value: (string
      (string_fragment)))
  (assignment
    identifier: (identifier)
    value: (string
      (string_fragment))))

=====================================
Strings with simple escape sequences
=====================================

newline = "\n"
carriage_return = "\r"
tab = "\t"
backslash = "\\"
double_quote = "\""
surrounded = "with \"surrounding\" quotes"

---

(source_file
  (assignment
    identifier: (identifier)
    value: (string
      (escape_sequence)))
  (assignment
    identifier: (identifier)
    value: (string
      (escape_sequence)))
  (assignment
    identifier: (identifier)
    value: (string
      (escape_sequence)))
  (assignment
    identifier: (identifier)
    value: (string
      (escape_sequence)))
  (assignment
    identifier: (identifier)
    value: (string
      (escape_sequence)))
  (assignment
    identifier: (identifier)
    value: (string
      (string_fragment)
      (escape_sequence)
      (string_fragment)
      (escape_sequence)
      (string_fragment))))
